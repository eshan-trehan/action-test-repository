# This is a basic workflow to help you get started with Actions

name: Testing out Github Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Permissions for adding checks
    permissions:
      checks: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.EDITH_GITHUB_APP_ID }}
          private-key: ${{ secrets.EDITH_GITHUB_APP_PRIVATE_KEY }}

      # Runs a seperate check 
      - uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ steps.app-token.outputs.token }}
          name: Summary Generation
          conclusion: success
          output: |
            {"summary":"Test was a success","text_description":"This is a text description of the annotations and images\nWith more stuff\nAnd more"}

      - uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ steps.app-token.outputs.token }}
          name: Test Plan Generation
          conclusion: success
          output: |
            {"summary":"Test was a success","text_description":"This is a text description of the annotations and images\nWith more stuff\nAnd more"}

      - uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ steps.app-token.outputs.token }}
          name: Automated Code Review
          conclusion: success
          # output.summary is required with actions!
          output: |
            {"summary":"Some warnings in README.md"}
          annotations: |
            [{"path":"README.md","annotation_level":"warning","title":"Spell Checker","message":"Check your spelling for 'banaas'.","raw_details":"Do you mean 'bananas' or 'banana'?","start_line":1,"end_line":2}]

        
        
