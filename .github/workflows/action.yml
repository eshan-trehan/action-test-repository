name: Slash Command
on:
  issue_comment:
    types: [created]
  repository_dispatch:
    types: [dismiss-command]
jobs:
  slash-command-dispatch:
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request && github.event.action == 'created'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Slash Command Dispatch
        uses: peter-evans/slash-command-dispatch@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: >
            [
              {
                "command": "dismiss",
                "permission": "none",
                "issue-type": "pull-request"
              }
            ]
  execute-dismiss-command:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'dismiss-command'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Export Command Variables
        run: |
          echo "Github Repository: ${GITHUB_REPOSITORY}"
          REPO_FULL_NAME=${{ github.event.client_payload.github.payload.repository.full_name }}
          ISSUE_NUMBER=${{ github.event.client_payload.github.payload.issue.number }}

          echo "${{ toJson(github.event.client_payload.slash_command.args) }}"
          if [[ -n "${{ github.event.client_payload.slash_command.args.named.reviewer }}" ]]; then
            DISMISSED_REVIEWER=${{ github.event.client_payload.slash_command.args.named.reviewer }}
          elif [[ -n "${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}" ]]; then
            DISMISSED_REVIEWER=${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}
          fi
          echo "PULL_REQUEST_IDENTIFIER=${REPO_FULL_NAME}/${ISSUE_NUMBER}" >> $GITHUB_ENV
          echo "DISMISSED_REVIEWER=${DISMISSED_REVIEWER}" >> $GITHUB_ENV
      - name: Validate Command Inputs
        run: |
          if [[ -z "$DISMISSED_REVIEWER" ]]; then
            ERROR="No reviewer specified to dismiss!"
          fi
          echo "ERROR=${ERROR}" >> $GITHUB_ENV
      - name: Make Alfred Request to add dismissed Reviewers
        if: env.ERROR == ''
        run: |
          RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X GET "https://google.com")
          if [ "$RESPONSE_CODE" -eq 200 ]; then
            echo "Request to Alfred Successful"
          else
            echo "ERROR=Request to Alfred failed with response code $RESPONSE_CODE" >> $GITHUB_ENV
           fi
      - name: Report Error
        uses: peter-evans/create-or-update-comment@v4
        if: env.ERROR != ''
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            > :warning: ${{ env.ERROR }}
          reactions: confused
      - name: Report Success
        uses: peter-evans/create-or-update-comment@v4
        if: env.ERROR == ''
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: hooray
